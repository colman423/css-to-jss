{"version":3,"sources":["components/CssInputPanel.js","css-to-jss/constant.js","components/RadioOptions.js","components/CheckboxOptions.js","components/OptionPanel.js","components/JssOutputPanel.js","css-to-jss/index.js","components/Title.js","components/Footer.js","containers/App.js","serviceWorker.js","index.js"],"names":["useStyles","createUseStyles","title","margin","textAlign","options","selectOnLineNumbers","roundedSelection","readOnly","cursorStyle","automaticLayout","formatOnPaste","CssInputPanel","className","value","onChange","classes","editorDidMount","useCallback","editor","focus","setSelection","endLineNumber","endColumn","startColumn","startLineNumber","handleChange","newValue","height","language","theme","NAMING_STYLE","CAMEL_CASE","PASCAL_CASE","SNAKE_CASE","SNAKE_CASE_CAMEL","SNAKE_CASE_PASCAL","QUOTE","NONE","SINGLE","DOUBLE","defaultOptions","selector","style","minify","quote","RadioOptions","optionList","Object","values","map","item","key","type","checked","CheckboxOptions","label","root","display","flex","OptionPanel","changeData","merge","handleMinifyChange","e","target","handleSelectorStyleChange","handleQuoteChange","cx","JssOutputPanel","transformRules","rules","result","forEach","rule","singleRuleResult","mediaName","media","declarations","declaration","name","replace","v","toUpperCase","convertKey","property","match","parseFloat","convertValue","selectors","originSelector","convertSelector","trim","pushIntoResult","shouldFirstUp","shouldFirstDown","toLowerCase","transform","inputCssText","Promise","res","rej","wrapclass","indexOf","cssParser","parse","stylesheet","obj","space","JSON","stringify","Title","href","rel","Footer","padding","flexGrow","flexBasis","optionPanel","container","backgroundColor","justifyContent","cssInputPanel","jssOutputPanel","demoBtn","App","useState","localStorage","getItem","cssInput","setCssInput","setOptions","jssOutput","setJssOutput","useEffect","then","catch","err","toString","localCssInput","useRef","current","console","log","window","onunload","setItem","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","jss","setup","id","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.664a2b9f.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { createUseStyles } from 'react-jss'\nimport MonacoEditor from 'react-monaco-editor';\n\nconst useStyles = createUseStyles({\n  title: {\n    margin: \"0px 0px 4px 0px\",\n    textAlign: 'center'\n  }\n})\n\nconst options = {\n  selectOnLineNumbers: true,\n  roundedSelection: false,\n  readOnly: false,\n  cursorStyle: \"line\",\n  automaticLayout: true,\n  formatOnPaste: true\n}\n\nfunction CssInputPanel({ className, value, onChange }) {\n  const classes = useStyles()\n\n  const editorDidMount = useCallback((editor) => {\n    //   editor.addCommand(\n    //     monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter,\n    //     () => {\n    //     },\n    //   )\n    editor.focus()\n    editor.setSelection({\n      endLineNumber: 100,\n      endColumn: 1,\n      startColumn: 1,\n      startLineNumber: 1\n    })\n  }, [])\n\n  const handleChange = useCallback((newValue) => {\n    // localStorage.setItem('cssinput', newValue)\n    onChange(newValue)\n  }, [onChange])\n\n  return (\n    <div className={className}>\n      <h2 className={classes.title}>Input Css</h2>\n      <MonacoEditor\n        height={350}\n        language=\"css\"\n        theme=\"vs-dark\"\n        value={value}\n        options={options}\n        onChange={handleChange}\n        editorDidMount={editorDidMount}\n      />\n    </div>\n  )\n}\n\nexport default CssInputPanel;\n","\r\nexport const NAMING_STYLE = {\r\n  CAMEL_CASE: 'camelCase',\r\n  PASCAL_CASE: 'PascalCase',\r\n  SNAKE_CASE: 'snake_case',\r\n  SNAKE_CASE_CAMEL: 'snake_Case',\r\n  SNAKE_CASE_PASCAL: 'Snake_Case',\r\n}\r\n\r\nexport const QUOTE = {\r\n  NONE: 'none',\r\n  SINGLE: \"'single'\",\r\n  DOUBLE: '\"double\"'\r\n}\r\n\r\nexport const defaultOptions = {\r\n  selector: {\r\n    style: NAMING_STYLE.PASCAL_CASE\r\n  },\r\n  minify: false,\r\n  quote: QUOTE.NONE\r\n}\r\n\r\nexport const defaultCssInput =\r\n  `.some-class {\r\n    margin-top: 40px;\r\n    padding: 12px 16px;\r\n  }\r\n`\r\n\r\nexport const demoCssInput =\r\n  `div {\r\n  width: 850px;\r\n  margin-top: 24px;\r\n}\r\n\r\n.div {\r\n  height: 620vh;\r\n  padding: 32px 48px 12px 48px;\r\n  overflow-y: auto;\r\n  width: 100%;\r\n}\r\n\r\n#div {\r\n  font-size: 20px;\r\n  color: #29354c;\r\n  margin: 0 0 10px 0;\r\n  height: 100px !important;\r\n  width: 100 px;\r\n}\r\n\r\n@media all and (max-height: 700px) {\r\n  .in-media-query {\r\n      max-height: 450px;\r\n  }\r\n}\r\n\r\n.animation {\r\n  -webkit-transform: translate(-50%, -50%);\r\n  transform: translate(-50%, -50%);\r\n  -webkit-animation: leftEyeAnimation 3s infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);\r\n  animation: leftEyeAnimation 3s infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\r\n}\r\n`\r\n","import React, { Fragment } from 'react';\r\nimport { createUseStyles } from 'react-jss'\r\n\r\n\r\nfunction RadioOptions({ className, title, optionList, value, onChange }) {\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>{title}</div>\r\n      {\r\n        Object.values(optionList).map(item => (\r\n          <Fragment key={item}>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value={item}\r\n                checked={value === item}\r\n                onChange={onChange}\r\n              />\r\n              {item}\r\n            </label>\r\n            <br />\r\n          </Fragment>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioOptions;\r\n","import React from 'react';\r\n\r\nfunction CheckboxOptions({ className, title, label, value, onChange }) {\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>{title}</div>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={value}\r\n          checked={value}\r\n          onChange={onChange}\r\n        />\r\n        {label || title}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckboxOptions;\r\n","import React, { useCallback } from 'react';\nimport { createUseStyles } from 'react-jss'\nimport { NAMING_STYLE, QUOTE } from '../css-to-jss/constant';\nimport { merge } from 'lodash';\nimport RadioOptions from './RadioOptions';\nimport CheckboxOptions from './CheckboxOptions';\nimport cx from 'classnames';\n\nconst useStyles = createUseStyles({\n  root: {\n    display: 'flex'\n  },\n  item: {\n    flex: '1 1'\n  },\n})\n\n\nfunction OptionPanel({ className, options, onChange, ...props }) {\n  const classes = useStyles()\n\n  const handleChange = useCallback((changeData) => {\n    onChange(\n      merge(\n        {},\n        options,\n        changeData\n      )\n    )\n  }, [options, onChange])\n\n  const handleMinifyChange = useCallback(e => {\n    handleChange({\n      minify: e.target.checked\n    })\n  }, [handleChange])\n  \n  const handleSelectorStyleChange = useCallback((e) => {\n    handleChange({\n      selector: {\n        style: e.target.value\n      }\n    })\n  }, [handleChange])\n\n  const handleQuoteChange = useCallback((e) => {\n    handleChange({\n      quote: e.target.value\n    })\n  }, [handleChange])\n\n  return (\n    <div className={cx(className, classes.root)}>\n\n      <RadioOptions\n        className={classes.item}\n        title=\"selector style\"\n        optionList={NAMING_STYLE}\n        value={options.selector.style}\n        onChange={handleSelectorStyleChange}\n      />\n\n      <RadioOptions\n        className={classes.item}\n        title=\"selector quote style\"\n        optionList={QUOTE}\n        value={options.quote}\n        onChange={handleQuoteChange}\n      />\n\n      <CheckboxOptions\n        className={classes.item}\n        title=\"minify\"\n        label=\"minify\"\n        value={options.minify}\n        onChange={handleMinifyChange}\n      />\n\n    </div>\n  )\n}\n\nexport default OptionPanel;\n","import React from 'react';\nimport { createUseStyles } from 'react-jss'\nimport MonacoEditor from 'react-monaco-editor';\n\nconst useStyles = createUseStyles({\n  title: {\n    margin: \"0px 0px 4px 0px\",\n    textAlign: 'center'\n  }\n})\n\nconst options = {\n  selectOnLineNumbers: true,\n  roundedSelection: false,\n  readOnly: true,\n  cursorStyle: \"line\",\n  automaticLayout: true,\n}\n\nfunction JssOutputPanel({ className, value, }) {\n  const classes = useStyles()\n\n\n  return (\n    <div className={className} >\n      <h2 className={classes.title}>Output Jss</h2>\n      <MonacoEditor\n        height={350}\n        language=\"css\"\n        theme=\"vs-dark\"\n        value={value}\n        options={options}\n      />\n    </div>\n  )\n}\n\nexport default JssOutputPanel;\n","import cssParser from 'css';\r\nimport { QUOTE, NAMING_STYLE } from './constant';\r\n\r\n//\r\n// reference\r\n// https://github.com/staxmanade/CssToReact/\r\n//\r\n\r\n\r\nfunction shouldFirstUp(style) {\r\n  return (\r\n    style === NAMING_STYLE.PASCAL_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE_PASCAL\r\n  )\r\n}\r\nfunction shouldFirstDown(style) {\r\n  return (\r\n    style === NAMING_STYLE.CAMEL_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE_CAMEL\r\n  )\r\n}\r\nfunction isSnakeCase(style) {\r\n  return (\r\n    style === NAMING_STYLE.SNAKE_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE_PASCAL ||\r\n    style === NAMING_STYLE.SNAKE_CASE_CAMEL\r\n  )\r\n}\r\n\r\n\r\nfunction transformRules(rules, options, result) {\r\n  // console.log(\"transformRules\", rules, options)\r\n  rules.forEach(function (rule) {\r\n    var singleRuleResult = {};\r\n    if (rule.type === 'media') {\r\n      var mediaName = convertMediaName(rule.media);\r\n      var media = result[mediaName] = result[mediaName] || {};\r\n      transformRules(rule.rules, options, media)\r\n    } else if (rule.type === 'rule') {\r\n      rule.declarations.forEach(function (declaration) {\r\n        if (declaration.type === 'declaration') {\r\n          var key = convertKey(declaration.property, options);\r\n          var value = convertValue(declaration.value, options);\r\n          singleRuleResult[key] = value;\r\n        }\r\n      });\r\n      rule.selectors.forEach(function (originSelector) {\r\n        var selector = convertSelector(originSelector.trim(), options);\r\n        pushIntoResult(result, selector, singleRuleResult, options)\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n}\r\n\r\nfunction pushIntoResult(result, key, value, options) {\r\n  if (result[key]) {\r\n    return pushIntoResult(result, convertSelector(key + \"-next\", options), value, options)\r\n  }\r\n  else {\r\n    result[key] = value;\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\nfunction convertValue(value) {\r\n  // console.log(\"convertValue\", value)\r\n\r\n  // convert '12px' to 12\r\n  if (value.match(/^-?\\d*\\.?\\d* *px$/g)) {\r\n    value = value.replace(/^(.*) *px$/g, \"$1\")\r\n    value = parseFloat(value)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction convertKey(name) {\r\n  // console.log(\"convertKey\", name)\r\n\r\n  // turn things like 'align-items' into 'alignItems'\r\n  name = name.replace(/(-.)/g, function (v) { return v[1].toUpperCase(); })\r\n\r\n  return name;\r\n}\r\n\r\nfunction convertMediaName(name) {\r\n  // console.log(\"mediaNameGenerator\", name)\r\n  return '@media ' + name;\r\n};\r\n\r\nfunction convertSelector(name, options) {\r\n  // console.log(\"convertSelector\", name, options)\r\n  name = name.replace(/\\s\\s+/g, ' ');\r\n\r\n  if (!isSnakeCase(options.selector.style)) {\r\n    name = name.replace(/(-.)/g, function (v) { return v[1].toUpperCase(); })\r\n  }\r\n  else if (options.selector.style === NAMING_STYLE.SNAKE_CASE) {\r\n  }\r\n  else {\r\n    name = name.replace(/(-.)/g, function (v) { return \"_\" + v[1].toUpperCase(); })\r\n  }\r\n\r\n  name = name.replace(/[^a-zA-Z0-9]/g, '_');\r\n  name = name.replace(/^_+/g, '');\r\n  name = name.replace(/_+$/g, '');\r\n\r\n  if (shouldFirstUp(options.selector.style)) {\r\n    // console.log(\"shouldFirstUp\", name)\r\n    name = name.replace(/^[a-z]/g, v => v[0].toUpperCase())\r\n  }\r\n  else if (shouldFirstDown(options.selector.style)) {\r\n    name = name.replace(/^[A-Z]/g, v => v[0].toLowerCase())\r\n  }\r\n  // console.log(\"convertSelector\", name)\r\n\r\n  return name;\r\n};\r\n\r\n\r\nfunction stringify(obj, options) {\r\n  let space = options.minify ? 0 : 2\r\n  let result = JSON.stringify(obj, null, space);\r\n  // console.log(\"stringify\", obj, options, space, result)\r\n  if (options.quote === QUOTE.SINGLE) {\r\n    result = result.replace(/\"([^\"]+)\":/g, \"'$1':\");\r\n  }\r\n  else if (options.quote === QUOTE.NONE) {\r\n    // console.log(\"stringify2\", result)\r\n    result = result.replace(/\"([^\"]+)\":/g, \"$1:\");\r\n  }\r\n\r\n  return result\r\n\r\n\r\n}\r\n\r\n\r\nexport function transform(inputCssText, options) {\r\n  return new Promise((res, rej) => {\r\n\r\n    if (!inputCssText) {\r\n      res(\"\")\r\n    }\r\n\r\n    // If the input \"css\" doesn't wrap it with a css class (raw styles)\r\n    // we need to wrap it with a style so the css parser doesn't choke.\r\n    var wrapclass = false;\r\n    if (inputCssText.indexOf(\"{\") === -1) {\r\n      wrapclass = true;\r\n      inputCssText = `.wrapclass { ${inputCssText} }`;\r\n    }\r\n\r\n    var css = cssParser.parse(inputCssText);\r\n    var result = {};\r\n    transformRules(css.stylesheet.rules, options, result);\r\n    // console.log(\"result1.1\", result)\r\n\r\n    // Don't expose the implementation detail of our wrapped css class.\r\n    if (wrapclass) {\r\n      result = Object.values(result)[0]\r\n    }\r\n    // console.log(\"result1.2\", result)\r\n\r\n    result = stringify(result, options)\r\n\r\n    // console.log(\"result2\", result)\r\n    res(result)\r\n  })\r\n\r\n}\r\n","import React from 'react';\n\nfunction Title({ className, ...props }) {\n  return (\n    <div className={className}>\n      <h1>Css to Jss Converter</h1>\n      <p>A simple tool to convert Css to Jss. <a href=\"https://cssinjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">About Jss</a></p>\n    </div>\n  )\n}\n\nexport default Title;\n","import React from 'react';\n\nfunction Footer({ className, ...props }) {\n  return (\n    <div className={className}>\n      <a href=\"https://github.com/colman423/css-to-jss\" target=\"_blank\">github link.</a>\n    </div>\n  )\n}\n\nexport default Footer;\n","import React, { useState, useEffect, Fragment, useRef } from 'react';\r\nimport CssInputPanel from '../components/CssInputPanel'\r\nimport OptionPanel from '../components/OptionPanel'\r\nimport JssOutputPanel from '../components/JssOutputPanel'\r\nimport { transform } from '../css-to-jss'\r\nimport { defaultOptions, demoCssInput, defaultCssInput } from '../css-to-jss/constant';\r\nimport { createUseStyles } from 'react-jss'\r\nimport Title from '../components/Title';\r\nimport cx from 'classnames'\r\nimport Footer from '../components/Footer';\r\n\r\nconst useStyles = createUseStyles({\r\n  flex: {\r\n    display: \"flex\",\r\n    padding: 8,\r\n  },\r\n  title: {\r\n    flexGrow: 0,\r\n    flexBasis: '40%'\r\n  },\r\n  optionPanel: {\r\n    flexGrow: 1,\r\n    flexBasis: '60%'\r\n  },\r\n\r\n  container: {\r\n    backgroundColor: '#eee',\r\n    justifyContent: 'space-around'\r\n  },\r\n  cssInputPanel: {\r\n    flex: \"1 1 50%\",\r\n    margin: 4\r\n  },\r\n  jssOutputPanel: {\r\n    flex: \"1 1 50%\",\r\n    margin: 4\r\n  },\r\n  demoBtn: {\r\n    padding: 8\r\n  },\r\n})\r\n\r\n\r\nfunction App({ className }) {\r\n  const classes = useStyles()\r\n  \r\n  const [cssInput, setCssInput] = useState(localStorage.getItem(\"cssinput\") || defaultCssInput, \"cssInput\")\r\n  const [options, setOptions] = useState(defaultOptions)\r\n  const [jssOutput, setJssOutput] = useState(\" \")\r\n  \r\n  useEffect(() => {\r\n    transform(cssInput, options).then(result => {\r\n      setJssOutput(result)\r\n    }).catch(err => {\r\n      setJssOutput(err.toString())\r\n    })\r\n  }, [cssInput, options])\r\n\r\n\r\n  const localCssInput = useRef()\r\n  useEffect(() => {\r\n    localCssInput.current = cssInput\r\n  }, [cssInput])\r\n  \r\n  useEffect(() => {\r\n    console.log(\"set unload\")\r\n    window.onunload = () => {\r\n      console.log(\"onunload\")\r\n      localStorage.setItem('cssinput', localCssInput.current)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.flex}>\r\n        <Title className={classes.title} />\r\n        <OptionPanel\r\n          className={classes.optionPanel}\r\n          options={options}\r\n          onChange={setOptions}\r\n        />\r\n      </div>\r\n\r\n      <div className={className}>\r\n        <div className={cx(classes.flex, classes.container)}>\r\n          <CssInputPanel\r\n            className={classes.cssInputPanel}\r\n            value={cssInput}\r\n            onChange={setCssInput}\r\n          />\r\n          <JssOutputPanel\r\n            className={classes.jssOutputPanel}\r\n            value={jssOutput}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.flex}>\r\n        <Footer />\r\n      </div>\r\n\r\n      {/* <div className={classes.demoBtn}>\r\n          <button onClick={() => setCssInput(demoCssInput)}>try demo</button>\r\n        </div> */}\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport 'normalize.css'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { jss } from 'react-jss';\n\nif (process.env.NODE_ENV === \"production\") {\n  jss.setup({ id: { minify: true } })\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}