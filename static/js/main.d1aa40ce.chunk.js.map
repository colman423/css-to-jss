{"version":3,"sources":["components/CssInputPanel.js","css-to-jss/constant.js","components/RadioOptions.js","components/CheckboxOptions.js","components/OptionPanel.js","components/JssOutputPanel.js","css-to-jss/index.js","containers/App.js","serviceWorker.js","index.js"],"names":["useStyles","createUseStyles","root","textarea","width","height","CssInputPanel","value","onChange","props","classes","options","useMemo","selectOnLineNumbers","roundedSelection","readOnly","cursorStyle","automaticLayout","formatOnPaste","editorDidMount","useCallback","editor","monaco","focus","setSelection","endLineNumber","endColumn","startColumn","startLineNumber","className","language","theme","newValue","e","NAMING_STYLE","CAMEL_CASE","PASCAL_CASE","SNAKE_CASE","SNAKE_CASE_CAMEL","SNAKE_CASE_PASCAL","QUOTE","NONE","SINGLE","DOUBLE","defaultOptions","selector","style","minify","quote","RadioOptions","title","optionList","Object","values","map","item","key","type","checked","CheckboxOptions","label","display","flex","OptionPanel","handleChange","changeData","merge","handleMinifyChange","target","handleSelectorStyleChange","handleQuoteChange","JssOutputPanel","transformRules","rules","result","forEach","rule","singleRuleResult","mediaName","media","declarations","declaration","name","replace","v","toUpperCase","convertKey","property","match","parseFloat","convertValue","selectors","originSelector","convertSelector","trim","pushIntoResult","shouldFirstUp","shouldFirstDown","toLowerCase","transform","inputCssText","Promise","res","rej","wrapclass","indexOf","cssParser","parse","stylesheet","obj","space","JSON","stringify","frame","cssInputPanel","padding","optionPanel","demoBtn","jssOutputPanel","App","useState","cssInput","setCssInput","setOptions","jssOutput","setJssOutput","useEffect","then","catch","err","toString","onClick","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.d1aa40ce.chunk.js","sourcesContent":["import React, { useMemo, useCallback, useEffect, useRef } from 'react';\nimport { createUseStyles } from 'react-jss'\nimport MonacoEditor from 'react-monaco-editor';\n\nconst useStyles = createUseStyles({\n  root: {\n  },\n  textarea: {\n    width: \"100%\",\n    height: 300\n  }\n})\n\n\nfunction CssInputPanel({ value, onChange, ...props }) {\n  // console.log(\"CssInputPanel\")\n  const classes = useStyles()\n\n  const options = useMemo(() => ({\n    selectOnLineNumbers: true,\n    roundedSelection: false,\n    readOnly: false,\n    cursorStyle: \"line\",\n    automaticLayout: true,\n    formatOnPaste: true\n  }), [])\n\n  const editorDidMount = useCallback((editor, monaco) => {\n  //   console.log(monaco.KeyCode, monaco)\n  //   editor.addCommand(\n  //     monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter,\n  //     () => {\n  //     },\n  //   )\n    editor.focus()\n    editor.setSelection({\n      endLineNumber: 100,\n      endColumn: 1,\n      startColumn: 1,\n      startLineNumber: 1\n    })\n  }, [])\n\n  return (\n    <div className={classes.textarea} {...props}>\n      <MonacoEditor\n        language=\"css\"\n        theme=\"vs-dark\"\n        value={value}\n        options={options}\n        onChange={(newValue, e) => onChange(newValue)}\n        editorDidMount={editorDidMount}\n      />\n    </div>\n  )\n}\n\nexport default CssInputPanel;\n","\r\nexport const NAMING_STYLE = {\r\n  CAMEL_CASE: 'camelCase',\r\n  PASCAL_CASE: 'PascalCase',\r\n  SNAKE_CASE: 'snake_case',\r\n  SNAKE_CASE_CAMEL: 'snake_Case',\r\n  SNAKE_CASE_PASCAL: 'Snake_Case',\r\n}\r\n\r\nexport const QUOTE = {\r\n  NONE: 'none',\r\n  SINGLE: 'SINGLE',\r\n  DOUBLE: 'DOUBLE'\r\n}\r\n\r\nexport const defaultOptions = {\r\n  selector: {\r\n    style: NAMING_STYLE.PASCAL_CASE\r\n  },\r\n  minify: false,\r\n  quote: QUOTE.NONE\r\n}\r\n\r\nexport const defaultCssInput =\r\n  `.some-class {\r\n    margin-top: 40px;\r\n    padding: 12px 16px;\r\n  }\r\n`\r\n\r\nexport const demoCssInput =\r\n  `div {\r\n  width: 850px;\r\n  margin-top: 24px;\r\n}\r\n\r\n.div {\r\n  height: 620vh;\r\n  padding: 32px 48px 12px 48px;\r\n  overflow-y: auto;\r\n  width: 100%;\r\n}\r\n\r\n#div {\r\n  font-size: 20px;\r\n  color: #29354c;\r\n  margin: 0 0 10px 0;\r\n  height: 100px !important;\r\n  width: 100 px;\r\n}\r\n\r\n@media all and (max-height: 700px) {\r\n  .in-media-query {\r\n      max-height: 450px;\r\n  }\r\n}\r\n\r\n.animation {\r\n  -webkit-transform: translate(-50%, -50%);\r\n  transform: translate(-50%, -50%);\r\n  -webkit-animation: leftEyeAnimation 3s infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);\r\n  animation: leftEyeAnimation 3s infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\r\n}\r\n`\r\n","import React, { Fragment } from 'react';\r\nimport { createUseStyles } from 'react-jss'\r\n\r\n\r\nfunction RadioOptions({ className, title, optionList, value, onChange }) {\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>{title}</div>\r\n      {\r\n        Object.values(optionList).map(item => (\r\n          <Fragment key={item}>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value={item}\r\n                checked={value === item}\r\n                onChange={onChange}\r\n              />\r\n              {item}\r\n            </label>\r\n            <br />\r\n          </Fragment>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioOptions;\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss'\r\n\r\n\r\n\r\nfunction CheckboxOptions({ className, title, label, value, onChange }) {\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>{title}</div>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={value}\r\n          checked={value}\r\n          onChange={onChange}\r\n        />\r\n        {label || title}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckboxOptions;\r\n","import React, { useCallback } from 'react';\nimport { createUseStyles } from 'react-jss'\nimport { NAMING_STYLE, QUOTE } from '../css-to-jss/constant';\nimport { merge } from 'lodash';\nimport RadioOptions from './RadioOptions';\nimport CheckboxOptions from './CheckboxOptions';\n\nconst useStyles = createUseStyles({\n  root: {\n    display: 'flex'\n  },\n  item: {\n    flex: '1 1'\n  },\n})\n\n\nfunction OptionPanel({ options, onChange, ...props }) {\n  // console.log(\"OptionPanel\", options)\n  const classes = useStyles()\n\n  const handleChange = useCallback((changeData) => {\n    onChange(\n      merge(\n        {},\n        options,\n        changeData\n      )\n    )\n  }, [options, onChange])\n\n  const handleMinifyChange = useCallback(e => {\n    handleChange({\n      minify: e.target.checked\n    })\n  }, [handleChange])\n  const handleSelectorStyleChange = useCallback((e) => {\n    handleChange({\n      selector: {\n        style: e.target.value\n      }\n    })\n  }, [handleChange])\n\n  const handleQuoteChange = useCallback((e) => {\n    handleChange({\n      quote: e.target.value\n    })\n  }, [handleChange])\n\n  return (\n    <div className={classes.root}>\n\n      <RadioOptions\n        className={classes.item}\n        title=\"selector style\"\n        optionList={NAMING_STYLE}\n        value={options.selector.style}\n        onChange={handleSelectorStyleChange}\n      />\n\n      <RadioOptions\n        className={classes.item}\n        title=\"selector quote style\"\n        optionList={QUOTE}\n        value={options.quote}\n        onChange={handleQuoteChange}\n      />\n\n      <CheckboxOptions\n        className={classes.item}\n        title=\"minify\"\n        label=\"minify\"\n        value={options.minify}\n        onChange={handleMinifyChange}\n      />\n\n    </div>\n  )\n}\n\nexport default OptionPanel;\n","import React, { useMemo } from 'react';\nimport { createUseStyles } from 'react-jss'\nimport MonacoEditor from 'react-monaco-editor';\n\nconst useStyles = createUseStyles({\n  root: {\n  },\n  textarea: {\n    width: \"100%\",\n    height: 300\n  }\n})\n\n\nfunction JssOutputPanel({ value, onChange, ...props }) {\n  // console.log(\"JssOutputPanel\")\n  const classes = useStyles()\n\n  const options = useMemo(() => ({\n    selectOnLineNumbers: true,\n    roundedSelection: false,\n    readOnly: true,\n    cursorStyle: \"line\",\n    automaticLayout: true,\n  }), [])\n\n  return (\n    <div className={classes.textarea} {...props}>\n      <MonacoEditor\n        language=\"css\"\n        theme=\"vs-dark\"\n        value={value}\n        options={options}\n      />\n    </div>\n  )\n}\n\nexport default JssOutputPanel;\n","import cssParser from 'css';\r\nimport { QUOTE, NAMING_STYLE } from './constant';\r\n\r\n//\r\n// reference\r\n// https://github.com/staxmanade/CssToReact/\r\n//\r\n\r\n\r\nfunction shouldFirstUp(style) {\r\n  return (\r\n    style === NAMING_STYLE.PASCAL_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE_PASCAL\r\n  )\r\n}\r\nfunction shouldFirstDown(style) {\r\n  return (\r\n    style === NAMING_STYLE.CAMEL_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE_CAMEL\r\n  )\r\n}\r\nfunction isSnakeCase(style) {\r\n  return (\r\n    style === NAMING_STYLE.SNAKE_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE_PASCAL ||\r\n    style === NAMING_STYLE.SNAKE_CASE_CAMEL\r\n  )\r\n}\r\n\r\n\r\nfunction transformRules(rules, options, result) {\r\n  // console.log(\"transformRules\", rules, options)\r\n  rules.forEach(function (rule) {\r\n    var singleRuleResult = {};\r\n    if (rule.type === 'media') {\r\n      var mediaName = convertMediaName(rule.media);\r\n      var media = result[mediaName] = result[mediaName] || {};\r\n      transformRules(rule.rules, options, media)\r\n    } else if (rule.type === 'rule') {\r\n      rule.declarations.forEach(function (declaration) {\r\n        if (declaration.type === 'declaration') {\r\n          var key = convertKey(declaration.property, options);\r\n          var value = convertValue(declaration.value, options);\r\n          singleRuleResult[key] = value;\r\n        }\r\n      });\r\n      rule.selectors.forEach(function (originSelector) {\r\n        var selector = convertSelector(originSelector.trim(), options);\r\n        pushIntoResult(result, selector, singleRuleResult, options)\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n}\r\n\r\nfunction pushIntoResult(result, key, value, options) {\r\n  if (result[key]) {\r\n    return pushIntoResult(result, convertSelector(key + \"-next\", options), value, options)\r\n  }\r\n  else {\r\n    result[key] = value;\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\nfunction convertValue(value) {\r\n  // console.log(\"convertValue\", value)\r\n\r\n  // convert '12px' to 12\r\n  if (value.match(/^-?\\d*\\.?\\d* *px$/g)) {\r\n    value = value.replace(/^(.*) *px$/g, \"$1\")\r\n    value = parseFloat(value)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction convertKey(name) {\r\n  // console.log(\"convertKey\", name)\r\n\r\n  // turn things like 'align-items' into 'alignItems'\r\n  name = name.replace(/(-.)/g, function (v) { return v[1].toUpperCase(); })\r\n\r\n  return name;\r\n}\r\n\r\nfunction convertMediaName(name) {\r\n  // console.log(\"mediaNameGenerator\", name)\r\n  return '@media ' + name;\r\n};\r\n\r\nfunction convertSelector(name, options) {\r\n  // console.log(\"convertSelector\", name, options)\r\n  name = name.replace(/\\s\\s+/g, ' ');\r\n\r\n  if (!isSnakeCase(options.selector.style)) {\r\n    name = name.replace(/(-.)/g, function (v) { return v[1].toUpperCase(); })\r\n  }\r\n  else if (options.selector.style === NAMING_STYLE.SNAKE_CASE) {\r\n  }\r\n  else {\r\n    name = name.replace(/(-.)/g, function (v) { return \"_\" + v[1].toUpperCase(); })\r\n  }\r\n\r\n  name = name.replace(/[^a-zA-Z0-9]/g, '_');\r\n  name = name.replace(/^_+/g, '');\r\n  name = name.replace(/_+$/g, '');\r\n\r\n  if (shouldFirstUp(options.selector.style)) {\r\n    // console.log(\"shouldFirstUp\", name)\r\n    name = name.replace(/^[a-z]/g, v => v[0].toUpperCase())\r\n  }\r\n  else if (shouldFirstDown(options.selector.style)) {\r\n    name = name.replace(/^[A-Z]/g, v => v[0].toLowerCase())\r\n  }\r\n  // console.log(\"convertSelector\", name)\r\n\r\n  return name;\r\n};\r\n\r\n\r\nfunction stringify(obj, options) {\r\n  let space = options.minify ? 0 : 2\r\n  let result = JSON.stringify(obj, null, space);\r\n  // console.log(\"stringify\", obj, options, space, result)\r\n  if (options.quote === QUOTE.SINGLE) {\r\n    result = result.replace(/\"([^\"]+)\":/g, \"'$1':\");\r\n  }\r\n  else if (options.quote === QUOTE.NONE) {\r\n    // console.log(\"stringify2\", result)\r\n    result = result.replace(/\"([^\"]+)\":/g, \"$1:\");\r\n  }\r\n\r\n  return result\r\n\r\n\r\n}\r\n\r\n\r\nexport function transform(inputCssText, options) {\r\n  return new Promise((res, rej) => {\r\n\r\n    if (!inputCssText) {\r\n      res(\"\")\r\n    }\r\n\r\n    // If the input \"css\" doesn't wrap it with a css class (raw styles)\r\n    // we need to wrap it with a style so the css parser doesn't choke.\r\n    var wrapclass = false;\r\n    if (inputCssText.indexOf(\"{\") === -1) {\r\n      wrapclass = true;\r\n      inputCssText = `.wrapclass { ${inputCssText} }`;\r\n    }\r\n\r\n    var css = cssParser.parse(inputCssText);\r\n    var result = {};\r\n    transformRules(css.stylesheet.rules, options, result);\r\n    // console.log(\"result1.1\", result)\r\n\r\n    // Don't expose the implementation detail of our wrapped css class.\r\n    if (wrapclass) {\r\n      result = Object.values(result)[0]\r\n    }\r\n    // console.log(\"result1.2\", result)\r\n\r\n    result = stringify(result, options)\r\n\r\n    // console.log(\"result2\", result)\r\n    res(result)\r\n  })\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport CssInputPanel from '../components/CssInputPanel'\nimport OptionPanel from '../components/OptionPanel'\nimport JssOutputPanel from '../components/JssOutputPanel'\nimport { transform } from '../css-to-jss'\nimport { defaultOptions, demoCssInput, defaultCssInput } from '../css-to-jss/constant';\nimport { createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles({\n  frame: {\n    display: \"flex\",\n  },\n  cssInputPanel: {\n    flex: \"1 1 50%\",\n    padding: 8\n  },\n  optionPanel: {\n    flex: \"1 1 90%\",\n    padding: 8\n  },\n  demoBtn: {\n    padding: 8\n  },\n  jssOutputPanel: {\n    flex: \"1 1 50%\",\n    padding: 8\n  }\n})\n\n\nfunction App() {\n  const classes = useStyles()\n  const [cssInput, setCssInput] = useState(defaultCssInput, \"cssInput\")\n  const [options, setOptions] = useState(defaultOptions)\n  const [jssOutput, setJssOutput] = useState(\" \")\n\n  // console.log(\"App\")\n\n  useEffect(() => {\n    // console.log(\"useEffetct\")\n    transform(cssInput, options).then(result => {\n      setJssOutput(result)\n    }).catch(err => {\n      setJssOutput(err.toString())\n    })\n  }, [cssInput, options])\n\n  return (\n    <>\n      <div className={classes.frame}>\n        <div className={classes.cssInputPanel}>\n          <CssInputPanel\n            value={cssInput}\n            onChange={setCssInput}\n          />\n        </div>\n        <div className={classes.jssOutputPanel}>\n          <JssOutputPanel\n            value={jssOutput}\n          />\n        </div>\n      </div>\n\n      <div className={classes.demoBtn}>\n        <button onClick={() => setCssInput(demoCssInput)}>try demo</button>\n      </div>\n\n      <div className={classes.frame}>\n        <div className={classes.optionPanel}>\n          <OptionPanel\n            options={options}\n            onChange={setOptions}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}