{"version":3,"sources":["components/CssInputPanel.js","css-to-jss/constant.js","components/RadioOptions.js","components/CheckboxOptions.js","components/OptionPanel.js","components/JssOutputPanel.js","css-to-jss/index.js","containers/App.js","serviceWorker.js","index.js"],"names":["useStyles","createUseStyles","root","textarea","width","height","CssInputPanel","value","onChange","props","console","log","classes","className","e","target","NAMING_STYLE","CAMEL_CASE","PASCAL_CASE","SNAKE_CASE","SNAKE_CASE_CAMEL","SNAKE_CASE_PASCAL","QUOTE","NONE","SINGLE","DOUBLE","defaultOptions","selector","style","minify","quote","display","item","flex","RadioOptions","title","optionList","Object","values","map","key","type","checked","CheckboxOptions","label","OptionPanel","options","handleChange","useCallback","changeData","merge","handleMinifyChange","handleSelectorStyleChange","handleQuoteChange","JssOutputPanel","readOnly","transformRules","rules","result","forEach","rule","name","singleRuleResult","mediaName","media","declarations","declaration","replace","v","toUpperCase","convertKey","property","match","parseFloat","convertValue","selectors","originSelector","convertSelector","trim","pushIntoResult","shouldFirstUp","shouldFirstDown","toLowerCase","transform","inputCssText","Promise","res","rej","wrapclass","indexOf","cssParser","parse","stylesheet","obj","space","JSON","stringify","frame","cssInputPanel","padding","optionPanel","jssOutputPanel","App","useState","cssInput","setCssInput","setOptions","jssOutput","setJssOutput","useEffect","then","catch","err","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.830b115a.chunk.js","sourcesContent":["import React from 'react';\nimport { createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles({\n  root: {\n  },\n  textarea: {\n    width: \"100%\",\n    height: 300\n  }\n})\n\n\nfunction CssInputPanel({value, onChange, ...props}) {\n  console.log(\"CssInputPanel\")\n  const classes = useStyles()\n\n  return (\n    <textarea\n      className={classes.textarea}\n      value={value}\n      onChange={(e) => onChange(e.target.value) }\n      {...props}\n    >\n    </textarea>\n  )\n}\n\nexport default CssInputPanel;\n","\r\nexport const NAMING_STYLE = {\r\n  CAMEL_CASE: 'camelCase',\r\n  PASCAL_CASE: 'PascalCase',\r\n  SNAKE_CASE: 'snake_case',\r\n  SNAKE_CASE_CAMEL: 'snake_Case',\r\n  SNAKE_CASE_PASCAL: 'Snake_Case',\r\n}\r\n\r\nexport const QUOTE = {\r\n  NONE: 'none',\r\n  SINGLE: 'SINGLE',\r\n  DOUBLE: 'DOUBLE'\r\n}\r\n\r\nexport const defaultOptions = {\r\n  selector: {\r\n    style: NAMING_STYLE.PASCAL_CASE\r\n  },\r\n  minify: false,\r\n  quote: QUOTE.NONE\r\n}\r\n","import React, { useCallback, Fragment } from 'react';\r\nimport { createUseStyles } from 'react-jss'\r\nimport { NAMING_STYLE, QUOTE } from '../css-to-jss/constant';\r\nimport { merge } from 'lodash';\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  item: {\r\n    flex: '1 1'\r\n  },\r\n})\r\n\r\n\r\nfunction RadioOptions({ className, title, optionList, value, onChange, ...props }) {\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>{title}</div>\r\n      {\r\n        Object.values(optionList).map(item => (\r\n          <Fragment key={item}>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value={item}\r\n                checked={value === item}\r\n                onChange={onChange}\r\n              />\r\n              {item}\r\n            </label>\r\n            <br />\r\n          </Fragment>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioOptions;\r\n","import React, { useCallback, Fragment } from 'react';\r\nimport { createUseStyles } from 'react-jss'\r\nimport { NAMING_STYLE, QUOTE } from '../css-to-jss/constant';\r\nimport { merge } from 'lodash';\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  item: {\r\n    flex: '1 1'\r\n  },\r\n})\r\n\r\n\r\nfunction CheckboxOptions({ className, title, label, value, onChange, ...props }) {\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>{title}</div>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={value}\r\n          checked={value}\r\n          onChange={onChange}\r\n        />\r\n        {label || title}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckboxOptions;\r\n","import React, { useCallback } from 'react';\nimport { createUseStyles } from 'react-jss'\nimport { NAMING_STYLE, QUOTE } from '../css-to-jss/constant';\nimport { merge } from 'lodash';\nimport RadioOptions from './RadioOptions';\nimport CheckboxOptions from './CheckboxOptions';\n\nconst useStyles = createUseStyles({\n  root: {\n    display: 'flex'\n  },\n  item: {\n    flex: '1 1'\n  },\n})\n\n\nfunction OptionPanel({ options, onChange, ...props }) {\n  console.log(\"OptionPanel\", options)\n  const classes = useStyles()\n\n  const handleChange = useCallback((changeData) => {\n    onChange(\n      merge(\n        {},\n        options,\n        changeData\n      )\n    )\n  }, [options, onChange])\n\n  const handleMinifyChange = useCallback(e => {\n    handleChange({\n      minify: e.target.checked\n    })\n  }, [handleChange])\n  const handleSelectorStyleChange = useCallback((e) => {\n    handleChange({\n      selector: {\n        style: e.target.value\n      }\n    })\n  }, [handleChange])\n\n  const handleQuoteChange = useCallback((e) => {\n    handleChange({\n      quote: e.target.value\n    })\n  }, [handleChange])\n\n  return (\n    <div className={classes.root}>\n\n      <RadioOptions\n        className={classes.item}\n        title=\"selector style\"\n        optionList={NAMING_STYLE}\n        value={options.selector.style}\n        onChange={handleSelectorStyleChange}\n      />\n\n      <RadioOptions\n        className={classes.item}\n        title=\"selector quote style\"\n        optionList={QUOTE}\n        value={options.quote}\n        onChange={handleQuoteChange}\n      />\n\n      <CheckboxOptions\n        className={classes.item}\n        title=\"minify\"\n        label=\"minify\"\n        value={options.minify}\n        onChange={handleMinifyChange}\n      />\n\n    </div>\n  )\n}\n\nexport default OptionPanel;\n","import React from 'react';\nimport { createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles({\n  root: {\n  },\n  textarea: {\n    width: \"100%\",\n    height: 300\n  }\n})\n\n\nfunction JssOutputPanel({value, onChange, ...props}) {\n  console.log(\"JssOutputPanel\")\n  const classes = useStyles()\n\n  return (\n    <textarea\n      className={classes.textarea}\n      value={value}\n      readOnly\n      {...props}\n    >\n    </textarea>\n  )\n}\n\nexport default JssOutputPanel;\n","import cssParser from 'css';\r\nimport { QUOTE, NAMING_STYLE } from './constant';\r\n\r\n//\r\n// reference\r\n// https://github.com/staxmanade/CssToReact/\r\n//\r\n\r\n\r\nfunction shouldFirstUp(style) {\r\n  return (\r\n    style === NAMING_STYLE.PASCAL_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE_PASCAL\r\n  )\r\n}\r\nfunction shouldFirstDown(style) {\r\n  return (\r\n    style === NAMING_STYLE.CAMEL_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE_CAMEL\r\n  )\r\n}\r\nfunction isSnakeCase(style) {\r\n  return (\r\n    style === NAMING_STYLE.SNAKE_CASE ||\r\n    style === NAMING_STYLE.SNAKE_CASE_PASCAL ||\r\n    style === NAMING_STYLE.SNAKE_CASE_CAMEL\r\n  )\r\n}\r\n\r\n\r\nfunction transformRules(rules, options, result) {\r\n  console.log(\"transformRules\", rules, options)\r\n  rules.forEach(function (rule) {\r\n    var singleRuleResult = {};\r\n    if (rule.type === 'media') {\r\n      var mediaName = convertMediaName(rule.media);\r\n      var media = result[mediaName] = result[mediaName] || {};\r\n      transformRules(rule.rules, options, media)\r\n    } else if (rule.type === 'rule') {\r\n      rule.declarations.forEach(function (declaration) {\r\n        if (declaration.type === 'declaration') {\r\n          var key = convertKey(declaration.property, options);\r\n          var value = convertValue(declaration.value, options);\r\n          singleRuleResult[key] = value;\r\n        }\r\n      });\r\n      rule.selectors.forEach(function (originSelector) {\r\n        var selector = convertSelector(originSelector.trim(), options);\r\n        pushIntoResult(result, selector, singleRuleResult, options)\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n}\r\n\r\nfunction pushIntoResult(result, key, value, options) {\r\n  if (result[key]) {\r\n    return pushIntoResult(result, convertSelector(key + \"-next\", options), value, options)\r\n  }\r\n  else {\r\n    result[key] = value;\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\nfunction convertValue(value) {\r\n  console.log(\"convertValue\", value)\r\n\r\n  // convert '12px' to 12\r\n  if (value.match(/^-?\\d*\\.?\\d* *px$/g)) {\r\n    value = value.replace(/^(.*) *px$/g, \"$1\")\r\n    value = parseFloat(value)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction convertKey(name) {\r\n  console.log(\"convertKey\", name)\r\n\r\n  // turn things like 'align-items' into 'alignItems'\r\n  name = name.replace(/(-.)/g, function (v) { return v[1].toUpperCase(); })\r\n\r\n  return name;\r\n}\r\n\r\nfunction convertMediaName(name) {\r\n  console.log(\"mediaNameGenerator\", name)\r\n  return '@media ' + name;\r\n};\r\n\r\nfunction convertSelector(name, options) {\r\n  console.log(\"convertSelector\", name, options)\r\n  name = name.replace(/\\s\\s+/g, ' ');\r\n\r\n  if (!isSnakeCase(options.selector.style)) {\r\n    name = name.replace(/(-.)/g, function (v) { return v[1].toUpperCase(); })\r\n  }\r\n  else if (options.selector.style === NAMING_STYLE.SNAKE_CASE) {\r\n  }\r\n  else {\r\n    name = name.replace(/(-.)/g, function (v) { return \"_\" + v[1].toUpperCase(); })\r\n  }\r\n\r\n  name = name.replace(/[^a-zA-Z0-9]/g, '_');\r\n  name = name.replace(/^_+/g, '');\r\n  name = name.replace(/_+$/g, '');\r\n\r\n  if (shouldFirstUp(options.selector.style)) {\r\n    console.log(\"shouldFirstUp\", name)\r\n    name = name.replace(/^[a-z]/g, v => v[0].toUpperCase())\r\n  }\r\n  else if (shouldFirstDown(options.selector.style)) {\r\n    name = name.replace(/^[A-Z]/g, v => v[0].toLowerCase())\r\n  }\r\n  console.log(\"convertSelector\", name)\r\n\r\n  return name;\r\n};\r\n\r\n\r\nfunction stringify(obj, options) {\r\n  let space = options.minify ? 0 : 2\r\n  let result = JSON.stringify(obj, null, space);\r\n  console.log(\"stringify\", obj, options, space, result)\r\n  if (options.quote === QUOTE.SINGLE) {\r\n    result = result.replace(/\"([^\"]+)\":/g, \"'$1':\");\r\n  }\r\n  else if (options.quote === QUOTE.NONE) {\r\n    console.log(\"stringify2\", result)\r\n    result = result.replace(/\"([^\"]+)\":/g, \"$1:\");\r\n  }\r\n\r\n  return result\r\n\r\n\r\n}\r\n\r\n\r\nexport function transform(inputCssText, options) {\r\n  return new Promise((res, rej) => {\r\n\r\n    if (!inputCssText) {\r\n      res(\"\")\r\n    }\r\n\r\n    // If the input \"css\" doesn't wrap it with a css class (raw styles)\r\n    // we need to wrap it with a style so the css parser doesn't choke.\r\n    var wrapclass = false;\r\n    if (inputCssText.indexOf(\"{\") === -1) {\r\n      wrapclass = true;\r\n      inputCssText = `.wrapclass { ${inputCssText} }`;\r\n    }\r\n\r\n    var css = cssParser.parse(inputCssText);\r\n    var result = {};\r\n    transformRules(css.stylesheet.rules, options, result);\r\n    console.log(\"result1.1\", result)\r\n\r\n    // Don't expose the implementation detail of our wrapped css class.\r\n    if (wrapclass) {\r\n      result = Object.values(result)[0]\r\n    }\r\n    console.log(\"result1.2\", result)\r\n\r\n    result = stringify(result, options)\r\n\r\n    console.log(\"result2\", result)\r\n    res(result)\r\n  })\r\n\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from 'react';\n// import logo from './logo.svg';\nimport CssInputPanel from '../components/CssInputPanel'\nimport OptionPanel from '../components/OptionPanel'\nimport JssOutputPanel from '../components/JssOutputPanel'\nimport { transform } from '../css-to-jss'\nimport { defaultOptions } from '../css-to-jss/constant';\nimport { createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles({\n  frame: {\n    display: \"flex\",\n  },\n  cssInputPanel: {\n    flex: \"1 1 50%\",\n    padding: 8\n  },\n  optionPanel: {\n    flex: \"1 1 100%\",\n    padding: 8\n  },\n  jssOutputPanel: {\n    flex: \"1 1 50%\",\n    padding: 8\n  }\n})\n\n\n\nfunction App() {\n  const classes = useStyles()\n  const [cssInput, setCssInput] = useState(\"\", \"cssInput\")\n  const [options, setOptions] = useState(defaultOptions)\n  const [jssOutput, setJssOutput] = useState(\"\")\n  const [isError, setIsError] = useState(false)\n\n  console.log(\"App\")\n\n  useEffect(() => {\n    console.log(\"useEffetct\")\n    transform(cssInput, options).then(result => {\n      setJssOutput(result)\n    }).catch(err => {\n      setJssOutput(err)\n    })\n  }, [cssInput, options])\n\n  return (\n    <>\n      <div className={classes.frame}>\n        <div className={classes.cssInputPanel}>\n          <CssInputPanel\n            value={cssInput}\n            onChange={setCssInput}\n          />\n        </div>\n        <div className={classes.jssOutputPanel}>\n          <JssOutputPanel\n            value={jssOutput}\n          />\n        </div>\n      </div>\n      <div className={classes.frame}>\n        <div className={classes.optionPanel}>\n          <OptionPanel\n            options={options}\n            onChange={setOptions}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}